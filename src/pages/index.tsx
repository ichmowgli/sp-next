import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip";
import { BUNDLES, LABELS } from "@/lib/constants";
import { useCalcStore } from "@/lib/store";
import { cn } from "@/lib/utils";
import { type NextPage } from "next";
import Head from "next/head";

const bundleKeys = Object.keys(BUNDLES) as Array<keyof typeof BUNDLES>;

const ItemSwitch = ({
  bundle,
  item,
}: {
  bundle: keyof typeof BUNDLES;
  item: string;
}) => {
  const store = useCalcStore();

  return (
    <Switch
      id={`switch-${item}`}
      onCheckedChange={(checked) =>
        checked
          ? store.addService(bundle, item)
          : store.removeService(bundle, item)
      }
      checked={store.isSelected(bundle, item)}
      disabled={!store.canAdd(bundle, item)}
    />
  );
};

const BundleCard = ({ bundle }: { bundle: keyof typeof BUNDLES }) => {
  const { selectBundle, canAdd, selectedBundle } = useCalcStore();

  const isSelectedBundle = selectedBundle == bundle;

  return (
    <div
      className={cn(
        "h-96 w-60",
        isSelectedBundle ? "outline-4 outline outline-offset-4 outline-lime-400" : ""
      )}
    >
      <Card className="h-full">
        <CardHeader>
          <CardTitle className="text-3xl">{LABELS[bundle]}</CardTitle>
        </CardHeader>
        <CardContent>
          {BUNDLES[bundle].items.map((item) => (
            <div
              key={`container-switch-${item}`}
              className="flex items-center space-x-2"
            >
              <Tooltip>
                {item == "decoder" && !canAdd(bundle, item) ? (
                  <TooltipTrigger>
                    <ItemSwitch bundle={bundle} item={item} />
                  </TooltipTrigger>
                ) : (
                  <ItemSwitch bundle={bundle} item={item} />
                )}
                <TooltipContent>
                  <p className="text-red-400">Can be added only with TV</p>
                </TooltipContent>
              </Tooltip>
              <Label htmlFor={`switch-${item}`} className="text-lg">
                {LABELS[item]}
              </Label>
            </div>
          ))}
        </CardContent>
        <CardFooter className="mt-auto">
          <Button onClick={() => selectBundle(bundle)} disabled={isSelectedBundle}>Select</Button>
        </CardFooter>
      </Card>
    </div>
  );
};

const Home: NextPage = () => {
  const store = useCalcStore();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {JSON.stringify(store.selectedBundle)}{" "}
      {JSON.stringify(store.selectedItems)}
      <TooltipProvider>
        <main className="flex min-h-screen flex-row items-center justify-center space-x-10">
          {bundleKeys.map((bundle) => (
            <BundleCard key={`bundle-${bundle}`} bundle={bundle} />
          ))}
        </main>
      </TooltipProvider>
    </>
  );
};

export default Home;
